* {
  margin: 0;
  padding: 0;
}

:root {
  --light-color: rgb(200 204 208);
  --tone-0: rgb(180 184 188);
  --dark-color: rgb(40 44 48);
  --red: rgb(255 100 128);
  --green: rgb(100 255 128);
}

body {
  display: grid;
  height: 100vh;
  grid-template-rows: 2fr 10fr 1fr;
  color: var(--light-color);
  background-color: var(--dark-color);
}

form {
  display: contents;
}

svg {
  width: 1em;
  height: 1em;
}

input {
  background-color: transparent;
  border: unset;
  width: 100%
}

button {
  font-size: 4rem;
  background-color: transparent;
  border: none;
  display: flex;
  justify-content: flex-end;
}

#background{
  position: absolute;
  width: 100vw;
  height: 100vh;
  z-index: -1;
}

#background circle {
  r: 0.0625rem;
  fill: rgb(60 64 68);
}

#library svg {
  fill: var(--dark-color);
}

#header {
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
  filter: drop-shadow(.25em 0.25em 0.25em rgb(0 0 0 / 0.5));

}

#footer {
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--tone-0);
  font-weight: 300;
  box-shadow: rgb(0 0 0 / 0.5);
  filter: drop-shadow(.25em 0.25em 0.25em rgb(0 0 0 / 0.5));

}

h1, h2, h3, h4 {
  font-size: 1em;
  text-transform: uppercase;
  
}

#banner {
  display: flex;
  align-items: center;
  justify-content: center;
}

#banner svg{
  fill: var(--light-color);
  width: 1.5em;
  height: 1.5em;
}

#library {
  display: grid;
  grid-template-columns: repeat(4, minmax(200px, 1fr));
  grid-template-rows: repeat(2, minmax(200px, 1fr));
  gap: 5vw;
  padding: 0 5vw;
}

.book {
  transition: all 200ms ease;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: repeat(4, 1fr);
  color: var(--dark-color);
  background-color: var(--light-color);
  padding: 1rem;
  border-radius: 0.25rem;
  box-shadow: 
  0.25rem 0.25rem rgb(100 104 108 / 1),
  0.5rem 0.5rem rgb(100 104 108 / 1),
  0.75rem 0.75rem rgb(100 104 108 / 1),
  0.85rem 0.85rem 0.5rem rgb(0 0 0 / 0.5);
}

.book:hover {
  transition: all 100ms ease;
  translate: -0.1rem -0.1rem;
  box-shadow: 
  0.25rem 0.25rem rgb(100 104 108 / 1),
  0.5rem 0.5rem rgb(100 104 108 / 1),
  0.75rem 0.75rem rgb(100 104 108 / 1),
  0.95rem 0.95rem 0.6rem rgb(0 0 0 / 0.5);

}

button {
  grid-area: 1 / 1 / 2 / 3;
}

.container {
  display: flex;
  flex-direction: column-reverse;
}

.title > h2,
.author > h3,
input[type="text"] {
  border-bottom: 1px solid var(--tone-0);
}

.title {
  grid-area: 2 / 1 / 3 / 3;
  font-size: 1.5rem;
  place-self: center;
  font-weight: 500;
}

.author {
  grid-area: 3 / 1 / 3 / 3;
  font-size: 1.25rem;
  place-self: center;
  font-weight: 400;
}

.pages {
  font-size: 1.5rem;
  place-self: end;
  align-items: center;
  font-weight: 300;
  flex-direction: row-reverse;
}
.read {
  position: relative;

  width: 100%;
  height: 100%;
}

.read svg {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 3em;
  height: 3em; 
}

input {
  font-family: 'Roboto', 'Arial', 'Helvetica', sans-serif;
  color: var(--dark-color);
}

.container svg,
button svg {
  transition: all 200ms ease-out;
  fill: var(--tone-0) !important;
}

input:focus + svg,
input:hover + svg,
button:focus svg,
button:hover svg {
  outline: none;
  transition: all 100ms ease-in;
  fill: var(--dark-color) !important;
}

input,
h2,
h3 {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 15ch;
}

p {
  color: var(--tone-0);
}

input:focus {
  outline: none;  
  caret-color: var(--tone-0);
  caret-shape: block;
}

input[type="text"] {
  text-transform: uppercase;
  text-align: center;
  appearance: none;
  /* font-weight: 550; */
}

input[type="number"] {
  appearance: none;
  text-align: right;
}

input[type="checkbox"] {
  width: 100%;
  height: 100%;
  opacity: 0;
}

input[type="checkbox"] ~ svg {
  transition: all 200ms ease-in-out;
  fill: var(--tone-0);
}

label:hover input[type="checkbox"] ~ svg {
  transition: all 100ms ease-in;
  fill: var(--dark-color);
}

label:hover input[type="checkbox"]:checked ~ svg {
  transition: all 100ms ease-in;
  fill: var(--dark-color);
}

input[type="checkbox"]:active ~ svg {
  transition: scale 100ms ease-in;
  scale: 1 0;
}

input[type="checkbox"]:checked:active ~ svg {
  transition: scale 100ms ease-in;
  scale: 0 1;
}

input[type="checkbox"] ~ svg > path {
  d: path("M18,22A2,2 0 0,0 20,20V4C20,2.89 19.1,2 18,2H12V9L9.5,7.5L7,9V2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18Z");
}

input[type="checkbox"]:checked ~ svg > path {
  d: path("M19 2L14 6.5V17.5L19 13V2M6.5 5C4.55 5 2.45 5.4 1 6.5V21.16C1 21.41 1.25 21.66 1.5 21.66C1.6 21.66 1.65 21.59 1.75 21.59C3.1 20.94 5.05 20.5 6.5 20.5C8.45 20.5 10.55 20.9 12 22C13.35 21.15 15.8 20.5 17.5 20.5C19.15 20.5 20.85 20.81 22.25 21.56C22.35 21.61 22.4 21.59 22.5 21.59C22.75 21.59 23 21.34 23 21.09V6.5C22.4 6.05 21.75 5.75 21 5.5V19C19.9 18.65 18.7 18.5 17.5 18.5C15.8 18.5 13.35 19.15 12 20V6.5C10.55 5.4 8.45 5 6.5 5Z");
}



